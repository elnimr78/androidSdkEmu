name: Android Emulator with Logcat

on:
  workflow_dispatch:

jobs:
  emulator-job:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - name: Cleanup previous runs
        run: |
          pkill -f "emulator" || true
          pkill -f "adb" || true
          rm -rf "${{ runner.temp }}/android-sdk" "${{ runner.temp }}/android-avd"

      - name: Set environment variables
        run: |
          echo "ANDROID_SDK_ROOT=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_AVD_HOME=${{ runner.temp }}/android-avd" >> $GITHUB_ENV
          mkdir -p "${{ runner.temp }}/android-avd"

      - name: Install Android SDK
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          curl -fo commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-mac-10406996_latest.zip
          unzip -q commandlinetools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/latest/cmdline-tools/"* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"
          rm commandlinetools.zip
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

      - name: Install packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "emulator" "system-images;android-33;google_apis_playstore;arm64-v8a"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd \
            -n testEmulator \
            -k "system-images;android-33;google_apis_playstore;arm64-v8a" \
            -d pixel \
            -c 2048M

          cat <<EOF >> "$ANDROID_AVD_HOME/testEmulator.avd/config.ini"
          hw.gpu.enabled=yes
          hw.gpu.mode=swiftshader_indirect
          hw.ramSize=2048
          vm.heapSize=512
          disk.dataPartition.size=2G
          image.sysdir.1=system-images/android-33/google_apis_playstore/arm64-v8a/
          EOF

      - name: Start Emulator (Fixed Command)
        run: |
          echo "=== Starting Emulator ==="
          
          # Fixed emulator command - removed problematic parameters
          $ANDROID_SDK_ROOT/emulator/emulator \
            -avd testEmulator \
            -no-audio \
            -no-window \
            -gpu swiftshader_indirect \
            -no-snapshot \
            -no-accel \
            -verbose > emulator.log 2>&1 &
          
          EMULATOR_PID=$!
          echo "EMULATOR_PID=$EMULATOR_PID" >> $GITHUB_ENV
          
          # Debug: Verify process
          sleep 5
          echo "=== Running Processes ==="
          ps -ef | grep emulator || true
          echo "=== Emulator Log Head ==="
          head -20 emulator.log

      - name: Wait for boot
        timeout-minutes: 10
        run: |
          echo "=== Waiting for Boot ==="
          adb start-server
          
          for i in {1..60}; do
            if adb devices | grep -q emulator; then
              echo "✅ Device detected"
              break
            fi
            echo "Waiting for device ($i/60)..."
            sleep 5
          done
          
          for i in {1..60}; do
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null || echo "")
            if [[ "$boot_completed" == "1" ]]; then
              echo "✅ Fully booted!"
              exit 0
            fi
            echo "Booting... ($i/60)"
            sleep 5
          done
          
          echo "❌ Boot failed!"
          tail -50 emulator.log
          exit 1

      - name: Capture Logs
        if: always()
        run: |
          #adb logcat -d > logcat.txt || true
          tail -100 emulator.log > emulator-tail.log

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emulator-logs
          path: |
            logcat.txt
            emulator.log
            emulator-tail.log
