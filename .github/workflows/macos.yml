name: Android Emulator with Logcat

on:
  workflow_dispatch:

jobs:
  emulator-job:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - name: Cleanup previous runs
        run: |
          pkill -f "emulator" || true
          pkill -f "adb" || true
          rm -rf "${{ runner.temp }}/android-sdk" "${{ runner.temp }}/android-avd"

      - name: Set environment variables
        run: |
          echo "ANDROID_SDK_ROOT=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_AVD_HOME=${{ runner.temp }}/android-avd" >> $GITHUB_ENV
          mkdir -p "${{ runner.temp }}/android-avd"

      - name: Install Android SDK
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          curl -fo commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-mac-10406996_latest.zip
          unzip -q commandlinetools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/latest/cmdline-tools/"* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"
          rm commandlinetools.zip
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

      - name: Install packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "emulator" "system-images;android-33;google_apis_playstore;arm64-v8a"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd \
            -n testEmulator \
            -k "system-images;android-33;google_apis_playstore;arm64-v8a" \
            -d pixel \
            -c 2048M

          # Critical AVD configuration
          cat <<EOF >> "$ANDROID_AVD_HOME/testEmulator.avd/config.ini"
          hw.gpu.enabled=yes
          hw.gpu.mode=swiftshader_indirect
          hw.ramSize=2048
          vm.heapSize=256
          disk.dataPartition.size=2G
          image.sysdir.1=system-images/android-33/google_apis_playstore/arm64-v8a/
          EOF

      - name: Start Emulator (with ADB fixes)
        run: |
          # Start ADB server first
          adb start-server
          adb kill-server
          adb start-server

          # Start emulator with explicit port
          $ANDROID_SDK_ROOT/emulator/emulator \
            -avd testEmulator \
            -no-audio \
            -no-window \
            -gpu swiftshader_indirect \
            -ports 5554,5555 \
            -no-snapshot \
            -verbose > emulator.log 2>&1 &
          EMULATOR_PID=$!
          echo "EMULATOR_PID=$EMULATOR_PID" >> $GITHUB_ENV

          # Verify emulator process
          sleep 5
          echo "=== Emulator Process ==="
          ps -p $EMULATOR_PID || { echo "Emulator failed to start"; cat emulator.log; exit 1; }

      - name: Wait for device (with ADB fixes)
        timeout-minutes: 10
        run: |
          # Reset ADB connection
          adb kill-server
          adb start-server

          echo "=== Waiting for device ==="
          for i in {1..60}; do
            # Check device connection
            DEVICES=$(adb devices)
            echo "$DEVICES"
            
            if echo "$DEVICES" | grep -q emulator; then
              echo "✅ Device connected"
              
              # Check if device is ready for commands
              if adb shell getprop sys.boot_completed >/dev/null 2>&1; then
                echo "✅ Device ready"
                adb shell input keyevent 82
                exit 0
              fi
            fi
            
            sleep 5
            echo "Retry $i/60..."
          done

          echo "❌ Failed to connect"
          echo "=== ADB Debug ==="
          adb devices -l
          adb shell getprop || true
          echo "=== Emulator Log ==="
          tail -100 emulator.log
          exit 1

      - name: Capture Logs
        if: always()
        run: |
          echo "=== Final Debug ==="
          echo "--- Processes ---"
          ps -ef | grep -E 'emulator|adb'
          echo "--- Network ---"
          netstat -an | grep 555
          echo "--- ADB Devices ---"
          adb devices -l
          echo "--- Logcat ---"
          # adb logcat -d > logcat.txt || true
          tail -200 emulator.log > emulator-tail.log

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emulator-logs
          path: |
            logcat.txt
            emulator.log
            emulator-tail.log
