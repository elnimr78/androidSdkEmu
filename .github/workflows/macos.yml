name: Android Emulator with Logcat

on:
  workflow_dispatch:

jobs:
  emulator-job:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - name: Cleanup previous runs
        run: |
          pkill -f "emulator" || true
          rm -rf "${{ runner.temp }}/android-sdk" "${{ runner.temp }}/android-avd"

      - name: Set environment variables
        run: |
          echo "ANDROID_SDK_ROOT=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_AVD_HOME=${{ runner.temp }}/android-avd" >> $GITHUB_ENV
          mkdir -p "${{ runner.temp }}/android-avd"

      - name: Install Android SDK
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          curl -fo commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-mac-10406996_latest.zip
          unzip -q commandlinetools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/latest/cmdline-tools/"* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"
          rm commandlinetools.zip
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH

      - name: Install packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "emulator" "system-images;android-33;google_apis_playstore;arm64-v8a"
          echo "System images verification:"
          ls -la "$ANDROID_SDK_ROOT/system-images/android-33/google_apis_playstore/arm64-v8a/"

      - name: Create AVD
        run: |
          avdmanager create avd \
            --sdk-root "$ANDROID_SDK_ROOT" \
            -n testEmulator \
            -k "system-images;android-33;google_apis_playstore;arm64-v8a" \
            -d pixel \
            -c 2048M <<< "no"

          # Configure AVD
          cat <<EOF >> "$ANDROID_AVD_HOME/testEmulator.avd/config.ini"
          hw.gpu.enabled=yes
          hw.gpu.mode=swiftshader_indirect
          showDeviceFrame=no
          hw.ramSize=2048
          vm.heapSize=256
          disk.dataPartition.size=2G
          image.sysdir.1=system-images/android-33/google_apis_playstore/arm64-v8a/
          EOF

      - name: Start Emulator
        run: |
          $ANDROID_SDK_ROOT/emulator/emulator \
            -avd testEmulator \
            -no-audio \
            -no-window \
            -gpu swiftshader_indirect \
            -no-snapshot \
            -sdk-root "$ANDROID_SDK_ROOT" > emulator.log 2>&1 &
          echo "Emulator started with PID $!"

      - name: Wait for boot
        timeout-minutes: 10
        run: |
          adb wait-for-device
          for i in {1..30}; do
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null)
            if [ "$boot_completed" = "1" ]; then
              echo "Emulator booted successfully"
              adb shell input keyevent 82
              exit 0
            fi
            echo "Waiting for boot... ($i/30)"
            sleep 10
          done
          echo "Emulator failed to boot"
          exit 1

      - name: Capture logs
        if: always()
        run: |
          adb logcat -d > logcat.txt || true
          tail -100 emulator.log > emulator-tail.log

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: emulator-logs
          path: |
            logcat.txt
            emulator.log
            emulator-tail.log
