name: Android Emulator with Logcat

on:
  workflow_dispatch:

jobs:
  emulator-job:
    runs-on: macos-latest
    timeout-minutes: 60

    steps:
      - name: Set environment variables
        run: |
          echo "ANDROID_SDK_ROOT=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "JAVA_HOME=/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK Command Line Tools
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -fo commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-mac-10406996_latest.zip
          unzip -q commandlinetools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          rm commandlinetools.zip

      - name: Add Android tools to PATH
        run: |
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/emulator" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

      - name: Install SDK Packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "emulator" "system-images;android-34;google_apis_playstore;arm64-v8a"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd -n testEmulator -k "system-images;android-34;google_apis_playstore;arm64-v8a" -d "pixel"
          # Optimized config
          echo "hw.gpu.enabled=yes" >> ~/.android/avd/testEmulator.avd/config.ini
          echo "hw.gpu.mode=swiftshader_indirect" >> ~/.android/avd/testEmulator.avd/config.ini
          echo "showDeviceFrame=no" >> ~/.android/avd/testEmulator.avd/config.ini
          echo "hw.ramSize=2048" >> ~/.android/avd/testEmulator.avd/config.ini
          echo "vm.heapSize=256" >> ~/.android/avd/testEmulator.avd/config.ini
          echo "disk.dataPartition.size=2G" >> ~/.android/avd/testEmulator.avd/config.ini

      - name: Start Emulator in Background
        run: |
          nohup $ANDROID_SDK_ROOT/emulator/emulator -avd testEmulator -no-audio -no-window -gpu swiftshader_indirect -verbose > emulator.log 2>&1 &

      - name: Check Emulator Process
        run: ps -ef | grep emulator

      - name: Wait for Emulator to Boot
        run: |
          echo "Waiting for emulator..."
          adb start-server
          boot_completed=""
          for i in {1..120}; do  # Increased to 120 retries (20 minutes)
            # Check if device is detected
            devices=$(adb devices | wc -l)
            if [ "$devices" -lt 3 ]; then
              echo "No device detected yet..."
              sleep 10
              continue
            fi
            
            # Check basic connectivity
            adb shell exit 2>/dev/null || {
              echo "ADB shell not ready..."
              sleep 10
              continue
            }
            
            # Check boot properties
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            boot_anim=$(adb shell getprop init.svc.bootanim 2>/dev/null | tr -d '\r')
            
            if [[ "$boot_completed" == "1" && "$boot_anim" == "stopped" ]]; then
              echo "✅ Emulator fully booted!"
              break
            fi
            
            echo "Still booting... ($i/120) - boot_completed=$boot_completed, boot_anim=$boot_anim"
            sleep 10
          done
      
          if [[ "$boot_completed" != "1" ]]; then
            echo "❌ Emulator failed to boot"
            # Get more debug info before failing
            adb devices
            adb shell getprop
            adb logcat -d | head -100
            exit 1
          fi

      - name: Start Logcat Capture
        run: |
          nohup adb logcat > logcat_output.txt 2>&1 &
          echo "Capturing logcat for 30 minutes..."
          sleep 1800
      
      - name: Get Debug Info
        if: failure()
        run: |
          echo "=== Emulator process status ==="
          ps -ef | grep emulator
          echo "=== ADB devices ==="
          adb devices
          echo "=== ADB properties ==="
          adb shell getprop
          echo "=== Last 100 logcat lines ==="
          adb logcat -d | tail -100
          
      - name: Upload Logcat
        uses: actions/upload-artifact@v4
        with:
          name: logcat-output
          path: logcat_output.txt

      - name: Upload Emulator Logs (Always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emulator-log
          path: emulator.log

      
