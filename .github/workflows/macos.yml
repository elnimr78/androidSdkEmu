name: Android Emulator with Logcat

on:
  workflow_dispatch:

jobs:
  emulator-job:
    runs-on: macos-latest
    timeout-minutes: 45

    steps:
      - name: Set up environment variables
        id: setup-env
        run: |
          echo "ANDROID_SDK_ROOT=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "JAVA_HOME=/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download Android command line tools
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -fo commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-mac-10406996_latest.zip
          unzip -q commandlinetools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          rm commandlinetools.zip

      - name: Add Android tools to PATH
        run: |
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/emulator" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

      - name: Install SDK packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "emulator" "system-images;android-34;google_apis_playstore;arm64-v8a"

      - name: Create Android Virtual Device (AVD)
        run: |
          echo "no" | avdmanager create avd -n testEmulator -k "system-images;android-34;google_apis_playstore;arm64-v8a" -d "pixel"

      - name: Start Android Emulator
        run: |
          nohup $ANDROID_SDK_ROOT/emulator/emulator -avd testEmulator -no-audio -no-window -no-snapshot -gpu swiftshader_indirect > emulator.log 2>&1 &
      
      - name: Debug Emulator Process
        run: ps -ef | grep emulator
  
      - name: Wait for ADB to connect
        run: |
          adb wait-for-device
          boot_completed=""
          echo "Waiting for emulator to fully boot..."
          until [[ "$boot_completed" == "1" ]]; do
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            sleep 5
          done
          echo "Emulator booted!"
          
      - name: Debug emulator status
        run: |
          adb devices
          adb shell getprop | grep boot
          adb shell pm list packages | head -n 10
          
      - name: Start capturing logcat
        run: |
          nohup adb logcat > logcat_output.txt 2>&1 &
          sleep 1800 # 30 minutes

      - name: Upload logcat output
        uses: actions/upload-artifact@v4
        with:
          name: logcat-output
          path: logcat_output.txt
